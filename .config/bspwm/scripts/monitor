#!/bin/sh

#DEFINIR ANCHO Y NUMERO DE LINEAS
menu_alto_lineas=10
menu_ancho=400
monitor_ancho=$(xrandr | awk '/*/ {print $1}' | cut -c 1-4)
monitor_alto=$(xrandr | awk '/*/ {print $1}' | cut -c 6-9)
#ALINEAR A LA DERECHA ARRIBA
XX=$(( $monitor_ancho - $menu_ancho -5 ))
YY=$(( 25 ))
#ALINEADO A LA IZQUIERA ARRIBA
#XX=0
#YY=25
#ALINEADO AL CENTRO
#menu_alto_pixeles=$(( $menu_alto_lineas * 10 ))
#menu_mitad_ancho=$(( $menu_ancho / 2 ))
#XX=$(( $monitor_ancho / 2 - $menu_mitad_ancho ))
#YY=$(( $monitor_alto / 2 - $menu_alto_pixeles ))


twoscreen() { # If multi-monitor is selected and there are two screens.

    mirror=$(printf "no\\nyes" | dmenu -w $menu_ancho -x $XX -y $YY -i -p "Duplicar pantalla?")
    # Mirror displays using native resolution of external display and a scaled
    # version for the internal display
    if [ "$mirror" = "yes" ]; then
        external=$(echo "$screens" | dmenu -w $menu_ancho -x $XX -y $YY -i -p "Optimizar la resolucion para:")
        internal=$(echo "$screens" | grep -v "$external")

        res_external=$(xrandr --query | sed -n "/^$external/,/\+/p" | \
            tail -n 1 | awk '{print $1}')
        res_internal=$(xrandr --query | sed -n "/^$internal/,/\+/p" | \
            tail -n 1 | awk '{print $1}')

        res_ext_x=$(echo "$res_external" | sed 's/x.*//')
        res_ext_y=$(echo "$res_external" | sed 's/.*x//')
        res_int_x=$(echo "$res_internal" | sed 's/x.*//')
        res_int_y=$(echo "$res_internal" | sed 's/.*x//')

        scale_x=$(echo "$res_ext_x / $res_int_x" | bc -l)
        scale_y=$(echo "$res_ext_y / $res_int_y" | bc -l)

        xrandr --output "$external" --auto --scale 1.0x1.0 \
            --output "$internal" --auto --same-as "$external" \
            --scale "$scale_x"x"$scale_y"
    else

        primary=$(echo "$screens" | dmenu -w $menu_ancho -x $XX -y $YY -i -p "Seleccionar monitor principal:")
        secondary=$(echo "$screens" | grep -v "$primary")
        direction=$(printf "left\\nright" | dmenu -w $menu_ancho -x $XX -y $YY -i -p "De que lado estara $primary de $secondary?")
        xrandr --output "$primary" --auto --scale 1.0x1.0 --output "$secondary" --"$direction"-of "$primary" --auto --scale 1.0x1.0
    fi
    }

morescreen() { # If multi-monitor is selected and there are more than two screens.
    primary=$(echo "$screens" | dmenu -w $menu_ancho -x $XX -y $YY -i -p "Selecionar monitor principal:")
    secondary=$(echo "$screens" | grep -v "$primary" | dmenu -w $menu_ancho -x $XX -y $YY -i -p "Seleccionar monitor secundario:")
    direction=$(printf "left\\nright" | dmenu -w $menu_ancho -x $XX -y $YY -i -p "De que lado estara $primary de $secondary?")
    tertiary=$(echo "$screens" | grep -v "$primary" | grep -v "$secondary" | dmenu -w $menu_ancho -x $XX -y $YY -i -p "Seleccionar tercer monitor:")
    xrandr --output "$primary" --auto --output "$secondary" --"$direction"-of "$primary" --auto --output "$tertiary" --"$(printf "left\\nright" | grep -v "$direction")"-of "$primary" --auto
    }

multimon() { # Multi-monitor handler.
    case "$(echo "$screens" | wc -l)" in
        2) twoscreen ;;
        *) morescreen ;;
    esac ;}

onescreen() { # If only one output available or chosen.
    xrandr --output "$1" --auto --scale 1.0x1.0 $(echo "$allposs" | grep -v "$1" | awk '{print "--output", $1, "--off"}' | paste -sd ' ')
    }

postrun() { # Stuff to run to clean up.
    fondo       # Fix background if screen size/arangement has changed.
    { killall dunst ; setsid -f dunst ;} >/dev/null 2>&1 # Restart dunst to ensure proper location on screen
    }

# Get all possible displays
allposs=$(xrandr -q | grep "connected")

# Get all connected screens.
screens=$(echo "$allposs" | awk '/ connected/ {print $1}')

# If there's only one screen
[ "$(echo "$screens" | wc -l)" -lt 2 ] &&
    { onescreen "$screens"; postrun; notify-send "ðŸ’» Solo se detecto un monitor." "Esta usando la mejor configuracion...";  exit ;}

# Get user choice including multi-monitor and manual selection:
chosen=$(printf "%s\\nmulti-monitor\\nmanual selection" "$screens" | dmenu -w $menu_ancho -x $XX -y $YY -i -p "Selecciona una configuracion de pantalla:") &&
case "$chosen" in
    "manual selection") arandr ; exit ;;
    "multi-monitor") multimon ;;
    *) onescreen "$chosen" ;;
esac

postrun
